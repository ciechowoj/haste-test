#pragma once
#include <haste/string>

namespace haste {

enum class jtype {
  jnull,
  jbool,
  jnumber,
  jstring,
  jobject,
  jarray,
};

class jvalue {
public:
  jvalue();

  jtype type() const;
  bool as_bool() const;
  i32 as_i32() const;
  u32 as_u32() const;
  i64 as_i64() const;
  u64 as_u64() const;
  f32 as_f32() const;
  f64 as_f64() const;
  string as_string() const;
  jvalue at(const char* key) const;
  jvalue at(const string& key) const;
  jvalue at(usize index) const;
  usize size() const;
  jvalue clone() const;

private:
  jvalue(const string& that);
  list<usize> _index;
  string _data;
};


jvalue parse_json(const string& source);
string format_json(const jvalue& json);





}
